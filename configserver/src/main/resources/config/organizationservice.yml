server:
  port: ${service.organizationservice.port}

spring:
  jpa:
    database: hsql
    generate-ddl: true
    hibernate:
      ddl-auto: update
  datasource:
    url: ${service.hsqldb.path}\organization_db
    username: SA
    password:
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${service.kafka.brokers}
      bindings:
        output:
          contentType: application/json
          destination: orgChangeTopic
    sleuth:
      web:
        client:
          enabled: true
      sampler:
        probability: 1.0
    zipkin:
      base-url: ${service.zipkinserver.uri}

eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${service.eurekaserver.uri}

management:
  endpoints:
    web:
      exposure:
        include: refresh

security:
  oauth2:
    resource:
      user-info-uri: ${service.oauth2.userInfoUri}
